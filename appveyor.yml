image: Visual Studio 2015
environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\ci\\run_with_env.cmd"
    PROJECT_NAME: convertbng
    TARBALL_KEY:
      secure: LxJrI1Zs9Y6K/d5EB5PIA7/eNS9K5OBuNXFvtYvWmA5NbPN5ugR3CjNmcjD+Oid3

  matrix:

    # Python 2.7.10 is the latest version and is not pre-installed.

    - PYTHON: "C:\\Python27.10-x64"
      PYTHON_VERSION: "2.7.10"
      PYTHON_ARCH: "64"
      TARGET: x86_64-pc-windows-msvc
      CHANNEL: stable

    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.
    # See: http://www.appveyor.com/docs/installed-software#python

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x" # currently 2.7.11
      TARGET: x86_64-pc-windows-msvc
      PYTHON_ARCH: "64"

install:
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }
  - ECHO "Filesystem root:"
  - set PATH=C:\Miniconda\Scripts:$PATH
  - ps: If ($env:PYTHON_ARCH -Match "64") {$env:PATH="C:\Miniconda-x64\Scripts:$PATH"}
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda create -q --name python%PYTHON_VERSION% python=%PYTHON_VERSION% 
  - activate python%PYTHON_VERSION%
  - pip install --disable-pip-version-check --user --upgrade pip
  - pip install -i https://pypi.anaconda.org/carlkl/simple mingwpy
  - conda install -q --name python%PYTHON_VERSION% setuptools numpy nose wheel requests
  - pip install -q mando tstoolbox baker
  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture

build_script:
  - python.exe ci/pre_install.py"
  # - "%CMD_IN_ENV% lib /def:convertbng\\lonlat_bng.def /OUT:convertbng\\lonlat_bng.lib"
  # - python.exe setup.py config --compiler=mingw32
  # - python.exe setup.py build --compiler=mingw32
  - python.exe setup.py bdist_wheel --compiler=mingw32

test_script:
  # Run the project tests
  - md to_test
  - cd to_test
  - "pip install convertbng --no-index -f C:\\projects\\convertbng\\dist
  - nosetests convertbng"

after_test:
  # If tests are successful, create binary packages for the project.
  # - "%CMD_IN_ENV% python setup.py bdist_wheel"
  # - "%CMD_IN_ENV% python setup.py bdist_wininst"
  # - "%CMD_IN_ENV% python setup.py bdist_msi"
  - "del dist\\num*"
  - ps: "ls dist"
  # avoid working dir PYTHONPATH issue, install wheel, and test again
  - cd C:\projects\convertbng
  - python.exe setup.py build_ext --inplace
  - ps: "ls convertbng"
  - dumpbin /dependents convertbng/cutil.pyd
  - dumpbin /dependents convertbng/lonlat_bng.dll

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*

before_deploy:
  # Generate artifacts for release
  # TODO update this part to copy the artifacts that make sense for your project
  - cd dist
    # release zipfile will look like 'convertbng-v1.2.3-x86_64-pc-windows-msvc'
  - 7z a ../%PROJECT_NAME%-%APPVEYOR_REPO_TAG_NAME%-%TARGET%.zip *
  - appveyor PushArtifact ../%PROJECT_NAME%-%APPVEYOR_REPO_TAG_NAME%-%TARGET%.zip

deploy:
  appveyor_repo_tag: true
  tag: $(APPVEYOR_REPO_TAG_NAME)
  release: $(APPVEYOR_REPO_TAG_NAME)
  description: 'Binaries'
  provider: GitHub
  auth_token:
    secure: K6Iir6jSgRNjr/7+H+3YoSy5uENblm5ae+sIAT3q5K+aO9fCBm/8BNpLTWMXP57v
  artifact: /.*\.zip/
  draft: false
  prerelease: false
  on:
    appveyor_repo_tag: true
    CHANNEL: stable

branches:
  only:
    - master
    - /v\d\.\d\.\d/
